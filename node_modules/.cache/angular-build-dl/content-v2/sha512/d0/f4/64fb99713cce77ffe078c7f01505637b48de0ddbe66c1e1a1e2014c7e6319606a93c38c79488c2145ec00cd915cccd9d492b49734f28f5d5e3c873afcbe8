{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commpanydet/commpanydet.component.ts","./src/app/commpanydet/commpanydet.component.html","./src/app/countries.service.ts","./src/app/emailverification/emailverification.component.ts","./src/app/emailverification/emailverification.component.html","./src/app/personaldet/personaldet.component.ts","./src/app/personaldet/personaldet.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonaldetComponent } from './personaldet/personaldet.component';\nimport { CommpanydetComponent } from './commpanydet/commpanydet.component';\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\n\nconst routes: Routes = [\n  {path:'', redirectTo:'personal', pathMatch:'full'},\n  {path:'personal', component:PersonaldetComponent},\n  {path:'company', component:CommpanydetComponent},\n  {path:'Verification', component:EmailverificationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Forms';\n}\n","<div class=\"topnav\">\n  <div class=\"first\">\n    <span class=\"dot\"> 1</span>\n    <a routerLink=\"personal\" >Personal Details</a>\n  \n    <div class=\"second\">\n      <span class=\"dot\">2</span>\n      <a routerLink=\"company\" >Company Details</a>\n    </div>\n    \n    <div class=\"third\">\n      <span class=\"dot\">3</span>\n      <a routerLink=\"Verification\" >Email Verification</a>\n    </div>\n    \n  \n  </div>\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PersonaldetComponent } from './personaldet/personaldet.component';\nimport { CommpanydetComponent } from './commpanydet/commpanydet.component';\nimport { EmailverificationComponent } from './emailverification/emailverification.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonaldetComponent,\n    CommpanydetComponent,\n    EmailverificationComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-commpanydet',\n  templateUrl: './commpanydet.component.html',\n  styleUrls: ['./commpanydet.component.css']\n})\nexport class CommpanydetComponent implements OnInit {\n\n  formobject:any ={\n    companyname:'',\n    Email:'',\n    Title:'',\n    year:''\n  }\nsubmitted:boolean=false;\n  backbutton: boolean =false;\n  imgurl: string =\"/assets/image/logo1.jpg\";\n \n  filetoupload: File = null;\n  constructor(private Router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onsubmit() {\n    this.submitted = true;\n    if (!this.formobject.companyname || !this.formobject.Email ||\n      !this.formobject.Title || !this.formobject.year) {\n      return;\n    }\n    this.Router.navigate(['/Verification']);\n  }\n  backtoperson(){\n    this.backbutton = true;\n    this.Router.navigate(['/personal']);\n  }\n  Fileinput(file: FileList){\n    this.filetoupload = file.item(0);\n\n    var reader = new FileReader();\n    reader.onload = (event:any) => {\n      this.imgurl =\"\";\n      this.imgurl = event.target.result;\n    }\n    reader.readAsDataURL(this.filetoupload);\n\n  }\n}\n","<form #name=\"ngForm\" (ngSubmit)=\"onsubmit();\">\n    <div class=\"headtop\">\n        <h2>Add Your Company Details</h2>\n        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aenean commodo ligula eget dolor.</p>\n    </div>\n    <img [src]=\"imgurl\"  style=\"width:80px; height:80px; border-radius: 50%; margin-bottom: 15px; \">\n        <label class=\"custom-file-upload\">\n            <input type=\"file\" accept=\"image/*\" (change)=\"Fileinput($event.target.files);\"/>\n            Upload your company Logo.\n        </label>\n        <!-- <input type=\"file\" accept=\"image/*\" (change)=\"Fileinput($event,target.files);\"> -->\n        <!-- <button type=\"button\">Upload you copany Logo</button> -->\n    <div>\n        <!-- Company Name -->\n        <label class=\"label_focus\" for=\"companyname\">Company Name</label>\n        <input type=\"text\" name=\"companyname\" placeholder=\"Company Name\" required [(ngModel)]=\"formobject.companyname\"\n            #company=\"ngModel\" [ngClass]=\"{'alertbox':submitted && company.invalid}\" />\n    \n        <div *ngIf=\"submitted && company.invalid\" class=\"alert\">\n            Enter Company Name\n        </div>\n        <!-- Email Id -->\n        <label for=\"Email\">Email Id</label>\n        <input type=\"text\" name=\"Email\" placeholder=\"Email Id\" required [(ngModel)]=\"formobject.Email\"\n            #Emailid=\"ngModel\" [ngClass]=\"{'alertbox':submitted && Emailid.invalid}\" />\n    \n        <div *ngIf=\"submitted && Emailid.invalid\" class=\"alert\">\n            Enter Email Id\n        </div>\n    \n        <!-- Job Title -->\n        <label for=\"Title\">Job Title</label>\n        <input type=\"text\" name=\"Title\" placeholder=\"Job Title\" required [(ngModel)]=\"formobject.Title\"\n            #jbitle=\"ngModel\" [ngClass]=\"{'alertbox':submitted && jbitle.invalid}\" />\n    \n        <div *ngIf=\"submitted && jbitle.invalid\" class=\"alert\">\n            Enter Job Title\n        </div>\n        <!-- year -->\n        <label for=\"year\">Years Of Experience</label>\n        <input type=\"text\" name=\"year\" placeholder=\"Years Of Experience\" required [(ngModel)]=\"formobject.year\"\n            #yeare=\"ngModel\" [ngClass]=\"{'alertbox':submitted && yeare.invalid}\" />\n    \n        <div *ngIf=\"submitted && yeare.invalid\" class=\"alert\">\n            Enter Years Of Experience\n        </div>\n        <div class=\"check_bottom\">\n            <input type=\"checkbox\" required name=\"checkbox\" value=\"check\" /> \n            <span class=\"checkbox_span\">I accept the </span><a>Terms & Coditions</a>\n                 \n        </div>\n       \n\n        <button class=\"otp_Back\" type=\"button\" (click)=\"backtoperson();\">Back</button>\n        <button class=\"otp\" type=\"submit\" >Send OTP</button>\n    \n    \n    </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n  url :string = \"https://raw.githubusercontent.com/sagarshirbhate/Country-State-City-Database/master/Contries.json\";\n\n  constructor(private http:HttpClient) { }\n  \n  allCountries(): Observable<any>\n  {\n    return this.http.get(this.url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-emailverification',\n  templateUrl: './emailverification.component.html',\n  styleUrls: ['./emailverification.component.css']\n})\nexport class EmailverificationComponent implements OnInit {\n\n  formobject:any ={\n    otp:''\n  }\nsubmitted:boolean=false;\n  backbutton: boolean =false;\n\n  constructor(private Router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onsubmit() {\n    this.submitted = true;\n    if (!this.formobject.otp ) {\n      return;\n    }\n    // this.Router.navigate(['/Verification']);\n  }\n  backtoperson(){\n    this.backbutton = true;\n    this.Router.navigate(['/company']);\n  }\n}","<form #name=\"ngForm\" (ngSubmit)=\"onsubmit();\">\n    <div class=\"headtop\">\n        <h2>Enter Your OTP</h2>\n        <p>For your security, we need to verify your identity. We send a 5-digit code to\n            <b>name@domain.com.</b> Please enter it below. </p>\n    </div>\n    <div class=\"otpbox\">\n        <input class=\"partitioned\" name=\"otp\" type=\"text\" maxlength=\"4\" required [(ngModel)]=\"formobject.otp\"\n        #otpid=\"ngModel\" />\n    </div>\n    \n\n        <!-- <button class=\"otp_Back\" type=\"button\" (click)=\"backtoperson();\"> Back</butotton> -->\n        <button class=\"otp_Back\" type=\"button\" (click)=\"backtoperson();\" >Back</button>\n        <button class=\"otp\" type=\"submit\" >Verify</button>\n    \n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CountriesService } from '../countries.service';\n\n@Component({\n  selector: 'app-personaldet',\n  templateUrl: './personaldet.component.html',\n  styleUrls: ['./personaldet.component.css']\n})\nexport class PersonaldetComponent implements OnInit {\n\n  formobject:any ={\n    usename:'',\n    //  count:'',\n    // state:'',\n    phone:''\n  }\n\nsubmitted:boolean=false;\nmobNumberPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\nstateInfo: any;\ncountryInfo: any;\ncityInfo: any;\n\n  constructor(private Router: Router,private country:CountriesService) { }\n\n\n  ngOnInit(): void {\n    this.getCountries();\n  }\n  onsubmit() {\n    this.submitted = true;\n    if (!this.formobject.usename || !this.formobject.phone) {\n      return;\n    }\n    this.Router.navigate(['/company']);\n  }\n\n  getCountries(){\n    this.country.allCountries().subscribe(\n      (data2:any) => {\n        this.countryInfo=data2.Countries;\n      },\n\n      err => console.log(err),\n      () => console.log('complete')\n    )\n  }\n\n  onChangeCountry(countryValue:any) {\n    \n     this.stateInfo=this.countryInfo[countryValue].States;\n     console.log(this.stateInfo);\n  }\n\n  // onChangeState(stateValue) {\n  //   this.cityInfo=this.stateInfo[stateValue].Cities;\n  //   //console.log(this.cityInfo);\n  // }\n\n\n\n}\n","<form #name=\"ngForm\" (ngSubmit)=\"onsubmit();\">\n    <div class=\"headtop\">\n        <h2>Add Your Personal Details</h2>\n        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aenean commodo ligula eget dolor.</p>\n    </div>\n       \n        <!-- Name -->\n        <label class=\"control-label\" for=\"usename\">Full Name</label>\n        <input type=\"text\" name=\"usename\" placeholder=\"Enter User Name\" required [(ngModel)]=\"formobject.usename\"\n            #username=\"ngModel\" [ngClass]=\"{'alertbox':submitted && username.invalid}\" />\n    \n        <div *ngIf=\"submitted && username.invalid\" class=\"alert\">\n            Enter Full Name\n        </div>\n       \n        <div class=\"gender\">\n            <div><label for=\"count\">Gender</label></div>\n            <button class=\"btn btn-default buttonspace\">Male</button>\n            <button class=\"btn btn-default buttonspace\">Femal</button>\n            <button class=\"btn btn-default buttonspace\">Other</button>\n        \n        </div>\n        <!-- Country -->\n        <label for=\"count\">Country</label>\n    \n        <select class=\"dropdown\" (Change)=\"onChangeCountry($event.target.value)\">\n            <option *ngFor=\"let country of countryInfo; let i = index\" value=\"{{i}}\">{{country.CountryName}}</option>\n          </select>  \n    \n        <!-- state -->\n        <label for=\"count\">state</label>\n       \n        <select   class=\"dropdown\" >\n            <option *ngIf=\"countryInfo == ''\" value=\"0\">--Select State--</option>\n            <option *ngFor=\"let state of stateInfo; let j = index\" value=\"{{j}}\">{{state.StateName}}</option>\n        </select>\n\n        <!-- Phone -->\n        <label for=\"phone\">Phone</label>\n        <input type=\"text\" name=\"count\" placeholder=\"Enter Phone No.\" required [(ngModel)]=\"formobject.phone\"\n            #phone=\"ngModel\"  [ngClass]=\"{'alertbox':submitted && phone.invalid}\" />\n    \n        <div *ngIf=\"submitted && phone.invalid\" class=\"alert\">Enter Phone No.</div>\n            <!-- <div *ngIf=\"phone.errors.pattern\"  class=\"alert\">  Phone number not valid.   </div>    -->\n        \n    \n        <button class=\"button\" type=\"submit\">Next</button>\n        \n   \n    <div >\n        <p class=\"bottom\">Already have an Account ?<a>Login</a></p>\n    </div>\n</form>\n<!-- <pre>\n    {{formobject | json}}\n</pre> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>welcome works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}